<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mappers.article">

	<insert id="insertArticle" parameterType="articleVO"
		useGeneratedKeys="true" keyProperty="productId">
		<![CDATA[
			INSERT INTO products(product_id, user_id, title, description, sell_or_share, price, category, region, place)
			VALUES(product_seq.NEXTVAL, #{userId}, #{title}, #{description, jdbcType=CLOB},#{sellOrShare}, #{price}, #{category}, #{region}, #{place})
		]]>

		<selectKey keyProperty="productId" resultType="int"
			order="AFTER">
			SELECT PRODUCT_SEQ.CURRVAL AS productId FROM DUAL
		</selectKey>
	</insert>

	<update id="insertProductImages" parameterType="articleVO">
		<foreach collection="filesName" item="file" open="INSERT ALL" close="SELECT * FROM DUAL" separator="">
        	INTO product_images(product_id, image_file_name)
        	VALUES (#{productId}, #{file, jdbcType=VARCHAR})
        </foreach>
	</update>

	<select id="selectArticles" resultType="articleVO">
		SELECT
			product_id AS productId,
			user_id AS userId,
			title,
			price,
			region,
			like_count AS likeCount,
			chat_count AS chatCount,
			view_count AS viewCount,
			status
		FROM products
		WHERE status IN ('Active', 'Booking') AND hidden = 0
		ORDER BY created_at DESC
	</select>
	
	<select id="selectArticlesByRandom" resultType="articleVO" parameterType="int">
		<![CDATA[
			SELECT *
			FROM (
	    		SELECT
		        	product_id AS productId,
        			user_id AS userId,
        			title,
        			price,
        			region,
        			like_count AS likeCount,
        			chat_count AS chatCount,
        			view_count AS viewCount,
        			status
    			FROM products
    			WHERE status IN ('Active', 'Booking') AND hidden = 0
    			ORDER BY DBMS_RANDOM.RANDOM
    		)
    		WHERE ROWNUM <= #{value}
    	]]>
	</select>
	
	<select id="selectArticlesBySearch" parameterType="String" resultType="articleVO">
		<![CDATA[
			SELECT * 
			FROM (
				SELECT
					product_id AS productId,
					user_id AS userId,
					title,
					price,
					region,
					like_count AS likeCount,
					chat_count AS chatCount,
					view_count AS viewCount,
					status
				FROM products
				WHERE status IN ('Active', 'Booking') AND hidden = 0 AND title LIKE '%' || #{value} || '%'
				ORDER BY created_at DESC
			)
			WHERE ROWNUM <= 6
		]]>
	</select>
	
	<select id="selectArticlesCountBySearch" parameterType="String" resultType="int">
		SELECT COUNT(product_id)
		FROM products
		WHERE status IN ('Active', 'Booking') AND hidden = 0 AND title LIKE '%' || #{value} || '%'
	</select>
	
	<select id="selectArticlesBySearchInRegion" parameterType="searchDTO" resultType="articleVO">
		<![CDATA[
			SELECT * 
			FROM (
				SELECT
					product_id AS productId,
					user_id AS userId,
					title,
					price,
					region,
					like_count AS likeCount,
					chat_count AS chatCount,
					view_count AS viewCount,
					status
				FROM products
				WHERE status IN ('Active', 'Booking') AND hidden = 0 
						AND title LIKE '%' || #{value} || '%' AND region LIKE #{region} || '%'
				ORDER BY created_at DESC
			)
			WHERE ROWNUM <= 6
		]]>
	</select>
	
	<select id="selectArticlesCountBySearchInRegion" parameterType="searchDTO" resultType="int">
		SELECT COUNT(product_id)
		FROM products
		WHERE status IN ('Active', 'Booking') AND hidden = 0 AND title LIKE '%' || #{value} || '%' AND region LIKE #{region} || '%'
	</select>
	
	<select id="selectMoreArticlesBySearch" parameterType="moreArticleDTO" resultType="articleVO">
	        SELECT * FROM (
            	SELECT
	                product_id AS productId,
                	user_id AS userId,
                	title,
                	price,
                	region,
                	like_count AS likeCount,
                	chat_count AS chatCount,
                	view_count AS viewCount,
                	status,
                	ROWNUM AS rn
            	FROM (
	                SELECT *
                	FROM products
                	<where>
                		<if test="region != null">
                			AND region LIKE '%' || #{region} || '%'
                		</if>
                		AND status IN ('Active', 'Booking') AND hidden = 0 AND title LIKE '%' || #{searchValue} || '%'
                	</where>
                	ORDER BY product_id DESC
            	)
		<![CDATA[
            	WHERE ROWNUM <= #{nextArticleListSize}
        	)
        	WHERE rn > #{articleListSize}
    	]]>
	</select>
	
	<select id="selectArticlesByRegion" parameterType="String" resultType="articleVO">
		<![CDATA[
			SELECT *
	        FROM (
            	SELECT
	                product_id AS productId,
                	user_id AS userId,
                	title,
                	price,
                	region,
                	like_count AS likeCount,
                	chat_count AS chatCount,
                	view_count AS viewCount,
                	status
            	FROM products
            	WHERE status IN ('Active', 'Booking') AND hidden = 0 AND region = #{value}
            	ORDER BY productId DESC
        	)
        	WHERE ROWNUM <= 12
		]]>
	</select>
	
	<select id="selectMoreArticlesByRegion" parameterType="moreArticleDTO" resultType="articleVO">
		<![CDATA[
	        SELECT * FROM (
            	SELECT
	                product_id AS productId,
                	user_id AS userId,
                	title,
                	price,
                	region,
                	like_count AS likeCount,
                	chat_count AS chatCount,
                	view_count AS viewCount,
                	status,
                	ROWNUM AS rn
            	FROM (
	                SELECT *
                	FROM products
                	WHERE status IN ('Active', 'Booking') AND hidden = 0 AND region = #{region}
                	ORDER BY product_id DESC
            	)
            	WHERE ROWNUM <= #{nextArticleListSize}
        	)
        	WHERE rn > #{articleListSize}
    	]]>
	</select>
	
	<select id="selectArticlesCountByRegion" parameterType="String" resultType="int">
		SELECT COUNT(product_id)
		FROM products
		WHERE region = #{value} AND status NOT IN ('Sold')
	</select>
	
	<select id="selectRandomArticlesByContainRegion" parameterType="String" resultType="articleVO">
		<![CDATA[
			SELECT * 
			FROM(
				SELECT
					product_id AS productId,
					user_id AS userId,
					title,
					price,
					region,
					like_count AS likeCount,
					chat_count AS chatCount,
					view_count AS viewCount,
					status
				FROM products
				WHERE status IN ('Active', 'Booking') AND hidden = 0 AND region LIKE CONCAT(#{value}, '%')
				ORDER BY DBMS_RANDOM.RANDOM
			)
			WHERE ROWNUM < 100
		]]>
	</select>
	
	<select id="selectArticlesByProductIdList" parameterType="java.util.List" resultType="articleVO">
		SELECT
			product_id AS productId,
			user_id AS userId,
			title,
			price,
			region,
			like_count AS likeCount,
			chat_count AS chatCount,
			view_count AS viewCount,
			status
		FROM products
		WHERE product_id IN 
		<if test="list != null and list.size() > 0">
        	<foreach collection="list" item="productId" open="(" separator="," close=")">
	            #{productId}
        	</foreach>
    	</if>
    	<if test="list == null or list.size() == 0">
	        (NULL)
	    </if>
	</select>
	
	<select id="selectTradedArticles" parameterType="String" resultType="articleVO">
		SELECT
			product_id AS productId,
			user_id AS userId,
			title,
			price,
			region,
			like_count AS likeCount,
			chat_count AS chatCount,
			view_count AS viewCount,
			status
		FROM products
		WHERE status IN ('Sold', 'Shared') AND 
		product_id IN (SELECT product_id
					   FROM TRADES
					   WHERE buyer_id = #{value})
	</select>
	
	<select id="selectArticlesByUserIdAndStat" parameterType="salesDTO" resultType="articleVO">
		SELECT
			product_id AS productId,
			user_id AS userId,
			title,
			price,
			region,
			like_count AS likeCount,
			chat_count AS chatCount,
			view_count AS viewCount,
			status,
			hidden
		FROM products
		WHERE user_id = #{userId} AND hidden = 0
		<choose>
        	<when test="status == 'Active'">
            	AND status IN (#{status}, 'Booking')
        	</when>
        	<otherwise>
	    		AND status = #{status}
        	</otherwise>
    	</choose>
	</select>
	
	<select id="selectHiddenArticles" parameterType="String" resultType="articleVO">
		SELECT
			product_id AS productId,
			user_id AS userId,
			title,
			price,
			region,
			like_count AS likeCount,
			chat_count AS chatCount,
			view_count AS viewCount,
			status,
			hidden
		FROM products
		WHERE user_id = #{value} and hidden = 1
	</select>
	
	<select id="selectActiveArticlesCount" parameterType="String" resultType="int">
		SELECT
			COUNT(*)
		FROM PRODUCTS
		WHERE USER_ID = #{value} AND status IN ('Active', 'Booking') AND HIDDEN = 0
	</select>
	
	<select id="selectSoldArticlesCount" parameterType="String" resultType="int">
		SELECT
			COUNT(*)
		FROM PRODUCTS
		WHERE USER_ID = #{value} AND status = 'Sold' AND HIDDEN = 0
	</select>
	
	<select id="selectHiddenArticlesCount" parameterType="String" resultType="int">
		SELECT
			COUNT(*)
		FROM PRODUCTS
		WHERE USER_ID = #{value} AND HIDDEN = 1
	</select>

	<select id="selectArticle" parameterType="int"
		resultType="articleVO">
		SELECT
			product_id AS productId,
			user_id AS userId,
			title,
			description,
			sell_or_share AS sellOrShare,
			price,
			category,
			status,
			region,
			place,
			like_count AS likeCount,
			chat_count AS chatCount,
			view_count AS viewCount,
			created_at AS createdAt,
			hidden
		FROM products
		WHERE product_id = #{productId}
	</select>
	
	<update id="updateArticle" parameterType="articleVO">
		UPDATE products
		SET title = #{title}, 
			description = #{description}, 
			category = #{category},
			sell_or_share = #{sellOrShare},
			price = #{price},
			place = #{place}
		WHERE product_id = #{productId}
	</update>
	
	<delete id="updateImages" parameterType="updateImagesDTO">
		DELETE
		FROM product_images
		WHERE image_id NOT IN 
		<foreach collection="keepImages" item="image" open="(" close=")" separator=",">
			#{image}
		</foreach>
		AND product_id = #{productId}
	</delete>
	
	<update id="updateArticleStatus" parameterType="updateStatusDTO">
		UPDATE products
		SET status = #{status}
		WHERE product_id = #{productId}
	</update>
	
	<update id="updateArticleHidden" parameterType="updateHiddenDTO">
		UPDATE products
		SET hidden = #{hidden}
		WHERE product_id = #{productId}
	</update>
	
	<delete id="deleteArticleById" parameterType="int">
		DELETE 
		FROM products
		WHERE product_id = #{value}
	</delete>

	<select id="selectImagesName" parameterType="int"
		resultType="String">
		SELECT image_file_name FROM product_images
		WHERE product_id = #{value}
		ORDER BY image_id
	</select>
	
	<select id="selectArticleImages" parameterType="int" resultType="imageVO">
		SELECT
			image_id AS imageId,
			product_id AS productId,
			image_file_name AS imageFileName
		FROM product_images
		WHERE product_id = #{value}
		ORDER BY image_id
	</select>
	
	<delete id="deleteImagesById" parameterType="int">
		DELETE 
		FROM product_images
		WHERE product_id = #{value}
	</delete>
	
	<select id="selectLikeList" parameterType="String" resultType="likeDTO">
		SELECT
			user_id as userId,
			product_id as productId
		FROM LIKES
		WHERE user_id = #{value}
		ORDER BY created_at DESC
	</select>
	
	<select id="selectLike" parameterType="likeDTO"
		resultType="int">
		<![CDATA[
			SELECT COUNT(*)
			FROM LIKES
			WHERE user_id = #{userId} and product_id = #{productId}
		]]>
	</select>
	
	<insert id="addLike" parameterType="likeDTO">
		INSERT INTO LIKES(like_id, user_id, product_id)
		VALUES(like_seq.NEXTVAL, #{userId}, #{productId})
	</insert>
	
	<update id="increaseLike" parameterType="int">
		UPDATE products
		SET LIKE_COUNT = LIKE_COUNT + 1
		WHERE PRODUCT_ID = #{value}
	</update>
	
	<delete id="removeLike" parameterType="likeDTO">
		DELETE FROM LIKES
		WHERE user_id = #{userId} AND product_id = #{productId}
	</delete>
	
	<update id="decreaseLike" parameterType="int">
		UPDATE products
		SET LIKE_COUNT = LIKE_COUNT - 1
		WHERE PRODUCT_ID = #{value}
	</update>
	
	<delete id="deleteLikesById" parameterType="int">
		DELETE
		FROM likes
		WHERE product_id = #{value}
	</delete>
	
	<update id="increaseChat" parameterType="int">
		UPDATE PRODUCTS
		SET CHAT_COUNT = CHAT_COUNT + 1
		WHERE PRODUCT_ID = #{value}
	</update>
	
	<update id="decreaseChat" parameterType="int">
		UPDATE PRODUCTS
		SET CHAT_COUNT = CHAT_COUNT - 1
		WHERE PRODUCT_ID = #{value}
	</update>
	
	<update id="increaseView" parameterType="int">
		UPDATE products
		SET VIEW_COUNT = VIEW_COUNT + 1
		WHERE PRODUCT_ID = #{value}
	</update>
</mapper>