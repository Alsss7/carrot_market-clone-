<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mappers.article">

	<insert id="insertArticle" parameterType="articleVO"
		useGeneratedKeys="true" keyProperty="productId">
		<![CDATA[
			INSERT INTO products(user_id, title, description, sellOrShare, price, category, region, place)
			VALUES(#{userId}, #{title}, #{description, jdbcType=CLOB},#{sellOrShare}, #{price}, #{category}, #{region}, #{place})
		]]>

		<selectKey keyProperty="productId" resultType="int"
			order="AFTER">
			SELECT PRODUCT_SEQ.CURRVAL AS productId FROM DUAL
		</selectKey>
	</insert>

	<update id="insertProductImages" parameterType="articleVO">
		<foreach collection="filesName" item="file" separator=" "
			open="INSERT ALL" close="SELECT * FROM DUAL">
			INTO product_images(product_id, image_file_name)
			VALUES
			(#{productId}, #{file, jdbcType=VARCHAR})
		</foreach>
	</update>

	<select id="selectArticles" resultType="articleVO">
		SELECT
		product_id AS productId,
		user_id AS userId,
		title,
		price,
		region,
		like_count AS likeCount,
		chat_count AS chatCount,
		view_count AS viewCount
		FROM products
		ORDER BY product_id DESC
	</select>

	<select id="selectImages" parameterType="int"
		resultType="String">
		SELECT image_file_name FROM product_images
		WHERE product_id = #{value}
	</select>

	<select id="selectArticle" parameterType="int"
		resultType="articleVO">
		SELECT
		product_id AS productId,
		user_id AS userId,
		title,
		description,
		sellOrShare,
		price,
		category,
		status,
		region,
		place,
		like_count AS likeCount,
		chat_count AS chatCount,
		view_count AS viewCount
		FROM products
		WHERE product_id = #{productId}
	</select>
	
	<select id="selectLike" parameterType="likeDTO"
		resultType="int">
		<![CDATA[
			SELECT COUNT(*)
			FROM LIKES
			WHERE user_id = #{userId} and product_id = #{productId}
		]]>
	</select>
	
	<insert id="addLike" parameterType="likeDTO">
		INSERT INTO LIKES(user_id, product_id)
		VALUES(#{userId}, #{productId})
	</insert>
	
	<update id="increaseLike" parameterType="int">
		UPDATE products
		SET LIKE_COUNT = LIKE_COUNT + 1
		WHERE PRODUCT_ID = #{value}
	</update>
	
	<delete id="removeLike" parameterType="likeDTO">
		DELETE FROM LIKES
		WHERE user_id = #{userId} AND product_id = #{productId}
	</delete>
	
	<update id="decreaseLike" parameterType="int">
		UPDATE products
		SET LIKE_COUNT = LIKE_COUNT - 1
		WHERE PRODUCT_ID = #{value}
	</update>
	
	<update id="increaseView" parameterType="int">
		UPDATE products
		SET VIEW_COUNT = VIEW_COUNT + 1
		WHERE PRODUCT_ID = #{value}
	</update>
</mapper>